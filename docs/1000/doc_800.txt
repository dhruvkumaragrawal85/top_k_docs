<sub> 2 </sub> ' ' spanning ' ' V <sub> &amp;lambda ; </sub> ' ' and ' ' V <sub> &amp;lambda ; </sub> ' ' <sup> </sup> respectively ) : <math> beginbmatrix Z1 &amp; Z2 endbmatrix* A beginbmatrixZ1 &amp; Z2endbmatrix = beginbmatrix lambda , Ilambda &amp; A12 0 &amp; A22 endbmatrix : beginmatrix Vlambda oplus Vlambdaperp endmatrix rightarrow beginmatrix Vlambda oplus Vlambdaperp endmatrix </math> where ' ' I <sub> &amp;lambda ; </sub> ' ' is the identity operator on ' ' V <sub> &amp;lambda ; </sub> ' ' . The above matrix would be upper-triangular except for the ' ' A ' ' <sub> 22 </sub> block . But exactly the same procedure can be applied to the sub-matrix ' ' A ' ' <sub> 22 </sub> , viewed @ @ @ @ @ @ @ @ @ @ </sub> ' ' <sup> </sup> , and its submatrices . Continue this way n times . Thus the space C <sup> ' ' n ' ' </sup> will be exhausted and the procedure has yielded the desired result . The above argument can be slightly restated as follows : let ' ' &amp;lambda ; ' ' be an eigenvalue of ' ' A ' ' , corresponding to some eigenspace ' ' V <sub> &amp;lambda ; </sub> ' ' . ' ' A ' ' induces an operator ' ' T ' ' on the quotient space C <sup> ' ' n ' ' </sup> modulo ' ' V <sub> &amp;lambda ; </sub> ' ' . This operator is precisely the ' ' A ' ' <sub> 22 </sub> submatrix from above . As before , ' ' T ' ' would have an eigenspace , say ' ' W <sub> &amp;mu ; </sub> ' ' C <sup> ' ' n